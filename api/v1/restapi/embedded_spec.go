// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "status OpenAPI",
    "contact": {
      "email": "chris@cbrgm.net"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "host": "cbrgm.net",
  "basePath": "/",
  "paths": {
    "/notifications": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "status"
        ],
        "summary": "allows remote instances to post their status to our instance",
        "operationId": "notify",
        "parameters": [
          {
            "description": "Remote instances can post to this endpoint to send their status to us",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/status": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "status"
        ],
        "summary": "get the current status to the instance",
        "operationId": "getStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProfileStatus"
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "status"
        ],
        "summary": "add a new status to the instance",
        "operationId": "addStatus",
        "parameters": [
          {
            "type": "file",
            "description": "The media to upload",
            "name": "media",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/subscribers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscribers"
        ],
        "summary": "subscribes to the instance",
        "operationId": "addSubscriber",
        "parameters": [
          {
            "description": "User information that needs to be added to our subscribers list",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscribers"
        ],
        "summary": "subscribes to the instance",
        "operationId": "removeSubscriber",
        "parameters": [
          {
            "description": "User information that needs to be removed from our subscribers list",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/subscriptions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscriptions"
        ],
        "summary": "subscribes to a remote instance",
        "operationId": "addSubscription",
        "parameters": [
          {
            "description": "User information that needs to be added to our subscriptions list",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscriptions"
        ],
        "summary": "unsubscribe from a remote  instance",
        "operationId": "removeSubscription",
        "parameters": [
          {
            "description": "User information that needs to be removed from our subscriptions list",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Profile": {
      "description": "Profile describes a connection between two instances.",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "example": "foo.bar.com"
        }
      }
    },
    "ProfileStatus": {
      "description": "SubscriberDetails describes a new subscriber who wants to get updates from the instance",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "example": "John Wick"
        },
        "status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusItem"
          }
        },
        "url": {
          "type": "string",
          "example": "foo.bar.com"
        }
      }
    },
    "StatusItem": {
      "description": "SubscriberDetails describes a new subscriber who wants to get updates from the instance",
      "type": "object",
      "properties": {
        "caption": {
          "type": "string",
          "example": "My super cool picture"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "media": {
          "type": "string",
          "example": "https://foo.bar.com/myimg.png"
        }
      }
    }
  },
  "tags": [
    {
      "description": "provides endpoints to subscribe to the instance e.g. others to us",
      "name": "subscribers"
    },
    {
      "description": "provides endpoints to subscribe to remote instances e.g. we to others",
      "name": "subscriptions"
    },
    {
      "description": "provides endpoints to interact with an instance status",
      "name": "status"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "status OpenAPI",
    "contact": {
      "email": "chris@cbrgm.net"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "host": "cbrgm.net",
  "basePath": "/",
  "paths": {
    "/notifications": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "status"
        ],
        "summary": "allows remote instances to post their status to our instance",
        "operationId": "notify",
        "parameters": [
          {
            "description": "Remote instances can post to this endpoint to send their status to us",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/status": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "status"
        ],
        "summary": "get the current status to the instance",
        "operationId": "getStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProfileStatus"
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "status"
        ],
        "summary": "add a new status to the instance",
        "operationId": "addStatus",
        "parameters": [
          {
            "type": "file",
            "description": "The media to upload",
            "name": "media",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/subscribers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscribers"
        ],
        "summary": "subscribes to the instance",
        "operationId": "addSubscriber",
        "parameters": [
          {
            "description": "User information that needs to be added to our subscribers list",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscribers"
        ],
        "summary": "subscribes to the instance",
        "operationId": "removeSubscriber",
        "parameters": [
          {
            "description": "User information that needs to be removed from our subscribers list",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/subscriptions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscriptions"
        ],
        "summary": "subscribes to a remote instance",
        "operationId": "addSubscription",
        "parameters": [
          {
            "description": "User information that needs to be added to our subscriptions list",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscriptions"
        ],
        "summary": "unsubscribe from a remote  instance",
        "operationId": "removeSubscription",
        "parameters": [
          {
            "description": "User information that needs to be removed from our subscriptions list",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Profile": {
      "description": "Profile describes a connection between two instances.",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "example": "foo.bar.com"
        }
      }
    },
    "ProfileStatus": {
      "description": "SubscriberDetails describes a new subscriber who wants to get updates from the instance",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "example": "John Wick"
        },
        "status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusItem"
          }
        },
        "url": {
          "type": "string",
          "example": "foo.bar.com"
        }
      }
    },
    "StatusItem": {
      "description": "SubscriberDetails describes a new subscriber who wants to get updates from the instance",
      "type": "object",
      "properties": {
        "caption": {
          "type": "string",
          "example": "My super cool picture"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "media": {
          "type": "string",
          "example": "https://foo.bar.com/myimg.png"
        }
      }
    }
  },
  "tags": [
    {
      "description": "provides endpoints to subscribe to the instance e.g. others to us",
      "name": "subscribers"
    },
    {
      "description": "provides endpoints to subscribe to remote instances e.g. we to others",
      "name": "subscriptions"
    },
    {
      "description": "provides endpoints to interact with an instance status",
      "name": "status"
    }
  ]
}`))
}
