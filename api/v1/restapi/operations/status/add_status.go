// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// AddStatusHandlerFunc turns a function with the right signature into a add status handler
type AddStatusHandlerFunc func(AddStatusParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AddStatusHandlerFunc) Handle(params AddStatusParams) middleware.Responder {
	return fn(params)
}

// AddStatusHandler interface for that can handle valid add status params
type AddStatusHandler interface {
	Handle(AddStatusParams) middleware.Responder
}

// NewAddStatus creates a new http.Handler for the add status operation
func NewAddStatus(ctx *middleware.Context, handler AddStatusHandler) *AddStatus {
	return &AddStatus{Context: ctx, Handler: handler}
}

/*AddStatus swagger:route POST /status status addStatus

add a new status to the instance

*/
type AddStatus struct {
	Context *middleware.Context
	Handler AddStatusHandler
}

func (o *AddStatus) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAddStatusParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
