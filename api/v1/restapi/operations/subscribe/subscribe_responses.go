// Code generated by go-swagger; DO NOT EDIT.

package subscribe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// SubscribeOKCode is the HTTP code returned for type SubscribeOK
const SubscribeOKCode int = 200

/*SubscribeOK OK

swagger:response subscribeOK
*/
type SubscribeOK struct {
}

// NewSubscribeOK creates SubscribeOK with default headers values
func NewSubscribeOK() *SubscribeOK {

	return &SubscribeOK{}
}

// WriteResponse to the client
func (o *SubscribeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SubscribeUnauthorizedCode is the HTTP code returned for type SubscribeUnauthorized
const SubscribeUnauthorizedCode int = 401

/*SubscribeUnauthorized unauthorized

swagger:response subscribeUnauthorized
*/
type SubscribeUnauthorized struct {
}

// NewSubscribeUnauthorized creates SubscribeUnauthorized with default headers values
func NewSubscribeUnauthorized() *SubscribeUnauthorized {

	return &SubscribeUnauthorized{}
}

// WriteResponse to the client
func (o *SubscribeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// SubscribeInternalServerErrorCode is the HTTP code returned for type SubscribeInternalServerError
const SubscribeInternalServerErrorCode int = 500

/*SubscribeInternalServerError internal server error

swagger:response subscribeInternalServerError
*/
type SubscribeInternalServerError struct {
}

// NewSubscribeInternalServerError creates SubscribeInternalServerError with default headers values
func NewSubscribeInternalServerError() *SubscribeInternalServerError {

	return &SubscribeInternalServerError{}
}

// WriteResponse to the client
func (o *SubscribeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
